{"version":3,"sources":["components/Task.js","components/Tasks.js","components/AddTask.js","components/Button.js","components/Header.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Task","task","onDelete","onToggle","className","reminder","onDoubleClick","_id","text","style","color","cursor","onClick","day","Tasks","tasks","map","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Button","backgroundColor","defaultProps","Header","title","showAdd","location","useLocation","pathname","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","id","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updatedTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.799b3f8a.chunk.js","sourcesContent":["import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task._id)}>\n            <h3>{task.text} <FaTimes style={{ color: 'red', cursor: 'pointer' }} onClick={() => onDelete(task._id)}/></h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    return (\n        <>\n            {tasks.map((task) => (\n                <Task key={task._id} task={task} onDelete={onDelete} onToggle={onToggle}/>\n            ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n\n    const [ text, setText ] = useState('');\n    const [ day, setDay ] = useState('');\n    const [ reminder, setReminder ] = useState(false);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (!text) {\n            alert('Please add a task.');\n            return;\n        }\n        onAdd({ text, day, reminder });\n        setText('');\n        setDay('');\n        setReminder(false);\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)} />\n            </div>\n            <div className='form-control'>\n                <label>Day and Time</label>\n                <input type='text' placeholder='Add Day and Time' value={day} onChange={(e) => setDay(e.target.value)}/>\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\n            </div>\n            <input type='submit' value='Save Task' className='btn btn-block' />\n        </form>\n    );\n}\n\nexport default AddTask\n","import PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\n    return <button onClick={onClick} style={{backgroundColor: color}} className='btn'>{text}</button>\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func\n}\n\nexport default Button\n","import PropTypes from 'prop-types';\nimport Button from './Button';\nimport { useLocation } from 'react-router-dom';\n\nconst Header = ({ title, onAdd, showAdd }) => {\n    const location = useLocation();\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            {location.pathname === '/' && (<Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>)}\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker'\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nexport default Header\n","import { Link } from \"react-router-dom\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>Copyright &copy; 2021 Ayman Butmah & Razan Qazaha</p>\n      <Link to=\"/about\">About</Link>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { Link } from \"react-router-dom\";\n\nconst About = () => {\n  return (\n    <div>\n      <h4>\n        This is MERN stack application called Task Tracker that allows the user\n        to create tasks and set Day & time also Reminder. The main goal of this\n        application is to try how to dockerize mern apps using Docker.\n      </h4>\n      <Link to=\"/\">Go back</Link>\n    </div>\n  );\n};\n\nexport default About;\n","import { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Task from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport About from './components/About';\n\nfunction App() {\n\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    }\n    getTasks();\n  }, []);\n\n  // Fetch tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/api/v1/tasks');\n    const data = await res.json();\n    return data;\n  }\n\n  // Fetch tasks\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/api/v1/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  }\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/api/v1/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n  }\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/api/v1/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter((task) => task._id !== id));\n  }\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updatedTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n    const res = await fetch(`http://localhost:5000/api/v1/tasks/${id}`,{\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updatedTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map((task) => task._id === id ? { ...task, reminder: data.reminder } : task));\n  }\n\n  return (\n    <Router>\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      <Route path='/' exact render={(props) => (\n        <>\n          {showAddTask && <AddTask onAdd={addTask}/>}\n          {tasks.length > 0 ? (<Task tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>) : ('No Tasks to Show')}\n        </>\n      )} />\n      <Route path='/about' component={About} />\n      <Footer />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}